
@model IEnumerable<Inspinia_MVC5.Models.Region>

@{
    ViewBag.Title = "Мониторинг платежных аппаратов";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Мониторинг платежных аппаратов</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a>Сводка</a>
                @*<a href="@Url.Action("Dashboard_2", "Dashboards")">Сводка</a>*@
            </li>
            <li class="breadcrumb-item">
                <a>Платежные аппараты</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>Мониторинг платежных аппаратов</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight ecommerce">
    <div class="row">
        <div class="col-lg-5">
            <div class="ibox" id="ibox-load">
                <div class="ibox-title">
                        <h2>Платежные аппараты</h2>
                </div>
                <div class="ibox-content">

                    <div class="sk-spinner sk-spinner-double-bounce">
                        <div class="sk-double-bounce1"></div>
                        <div class="sk-double-bounce2"></div>
                    </div>

                    <div id="jstree1">
                        <ul>
                            <li class="jstree jstree-open">
                                @Model.ElementAt(0).Company.Name
                                <ul>
                                    @foreach (var region in Model)
                                    {
                                        <li class="jstree-node jstree-open">
                                            @region.Name
                                            <ul>
                                                @foreach (var wash in ViewBag.Washes)
                                                {
                                                    if (wash.IDRegion == region.IDRegion)
                                                    {
                                                        <li class="jstree-node jstree-open">
                                                            @wash.Name
                                                            <ul>
                                                                @foreach (var changer in wash.Changers)
                                                                {
                                                                    foreach (var d in ViewBag.Devices)
                                                                    {
                                                                        if (changer.IDDevice == d.IDDevice && d.IDDeviceType == 3)
                                                                        {
                                                                            <li class="my-1" onclick="select_changer('@d.Code')" id="@d.Code">
                                                                                @d.Name
                                                                            </li>
                                                                        }
                                                                    }
                                                                }
                                                            </ul>
                                                        </li>
                                                    }
                                                }
                                            </ul>
                                        </li>
                                    }
                                </ul>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="ibox-content-more">
                    <a style="margin-left:15px" id="btn-history" class="btn btn-secondary btn-sm"
                       href="@Url.Action("EventChangerView", "EventChanger", new {
                            begdate = DateTime.Today.ToString("dd.MM.yyyy HH:mm:ss"),
                            enddate = DateTime.Now.ToString("dd.MM.yyyy HH:mm:ss"),
                            })">
                        <i class="fa fa-history"></i> История событий на платежных аппаратах
                    </a>
                </div>
            </div>
        </div>
        <div class="col-lg-7">
            <div id="changer" class="ibox ">
                <div id="cur_changer" class="ibox-content">
                </div>
            </div>
        </div>
    </div>
</div>

<input hidden id="current_changer" />

@section Styles {
    @Styles.Render("~/Content/plugins/jsTree")
}

@section Scripts {
    @Scripts.Render("~/plugins/jsTree")
    @Scripts.Render("~/plugins/dateRange")


    <script type="text/javascript">

        var xhr;

        var timeridupdate = -1;
        var timeriddisconnect = -1;
        var timeridstarterror = -1;
        $('#changer').hide();

        function blurDiv() {
            $('#changer-state').removeClass('label-primary');
            $('#changer-state').removeClass('label-danger');
            $('#changer-state').addClass('label-danger');
            $('#changer-state').html('соединение разорвано'); 
            $('#changer-info').addClass('blur');
            console.log(moment().format('DD.MM.YYYY HH:mm:ss') + " Данные о разменнике неактуальны!");
        }

        function show() {
            if (xhr) {
                xhr.abort();
            }
            let code = $('#current_changer').val()

            xhr = $.ajax({
                type: "POST",
                cache: false,
                data: {
                    codeChanger: code
                },
                success: function (result) {
                    if (result.statusCode == 200) {

                        clearInterval(timeriddisconnect);
                        timeriddisconnect = -1;

                        clearInterval(timeridstarterror);
                        timeridstarterror = -1;

                        $('#changer-info').removeClass('blur');
                        $('#cur_changer').html(result.view);
                        $('#changer-state').removeClass('label-primary');
                        $('#changer-state').removeClass('label-danger');
                        $('#changer-state').addClass('label-primary');
                        $('#changer-state').html('соединение установлено'); 
                    }
                    else {
                        if (timeriddisconnect == -1 && timeridstarterror == -1) {
                            console.log("Утеряна связь с разменником.");
                            timeriddisconnect = setTimeout(blurDiv, 120000);
                        }
                        console.log(moment().format('DD.MM.YYYY HH:mm:ss') + " Во время запроса данных произошла ошибка!");
                        if (result.statusCode == 400) {
                            console.log("Код ошибки от сервера 400 - принято некорректное значение!");
                        }
                        else if (result.statusCode == 404) {
                            console.log("Код ошибки от сервера 404 - данный разменник не найден!");
                        }
                        else if (result.statusCode == 424) {   
                            console.log("Код ошибки от сервера 424 - ответ от разменника неудовлетворительный или нет связи!");
                        }
                        else if (result.statusCode == 500) {
                            console.log("Код ошибки от сервера 500 - внутренняя ошибка сервера!");
                        }
                    }
                },
                error: function (jqXHR) {
                    if (jqXHR.statusText == "abort") {
                        //
                    }
                    else {
                        console.log(moment().format('DD.MM.YYYY HH:mm:ss') + " Во время запроса данных произошла неизвестная внутренная ошибка!" + jqXHR.StatusCode);
                    }
                },
                url: "@Url.Action("_MonitoringChangerView", "Monitoring")",
            })
        }

        function select_changer(code) {

            if (xhr) {
                xhr.abort();
            }  

            if (timeridupdate != -1) {
                clearInterval(timeridupdate);
                timeridupdate = -1;
            }

            if (timeriddisconnect != -1) {
                clearInterval(timeriddisconnect);
                timeriddisconnect = -1;
            }

            if (timeridstarterror != -1) {
                clearInterval(timeridstarterror);
                timeridstarterror = -1;
            }

            $('#current_changer').val(code);
            $.ajax({
                type: "POST",
                cache: false,
                data: {
                    codeChanger: code
                },
                beforeSend: function () {
                    $('#ibox-load').children('.ibox-content').toggleClass('sk-loading');
                },
                complete: function () {
                    $('#ibox-load').children('.ibox-content').toggleClass('sk-loading');
                },
                error: function (jqXHR) {
                    console.log(moment().format('DD.MM.YYYY HH:mm:ss') + " Во время загрузки данных произошла неизвестная внутренная ошибка!" + jqXHR.StatusCode);
                },
                success: function (result) {
                    if (result.statusCode == 200) {
                        timeridupdate = setInterval(show, 10000);

                        $('#cur_changer').html(result.view);
                        $('#changer-state').removeClass('label-primary');
                        $('#changer-state').removeClass('label-danger');
                        $('#changer-state').addClass('label-primary');
                        $('#changer-state').html('соединение установлено'); 
                        $('#changer').fadeIn();
                    }
                    else {
                        timeridstarterror = setInterval(show, 60000);

                        $('#cur_changer').html(result.view);
                        $('#changer').fadeIn();
                    }
                },
                url: "@Url.Action("_MonitoringChangerView", "Monitoring")",
            });
        }

        function initjstree () {
            $('#jstree1').jstree({
                'core': {
                    'themes': {
                        'responsive': true
                    }
                },
                'plugins': ['types'],
                'types': {
                    'default': {
                        //'icon': 'fa fa-circle'
                        'icon': false
                    }
                }
            });
        }

        initjstree();

        $(document).ready(function () {

            if ('@ViewBag.Changer') {

                $('#current_changer').val('@ViewBag.Changer');
                let code = $('#current_changer').val()
                select_changer(code);
            }
        });
    </script>
}