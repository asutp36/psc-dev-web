@{
    ViewBag.Title = "Инкассация";
}
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Инкассация на мойках</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a>Сводка</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>Инкассация</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">
    </div>
</div>
<div class="ibox-content m-b-sm border-bottom" id="filter-i">
    <div class="row">
        <div class="col-sm-3">
            <div class="form-group">
                <label class="col-form-labe">Регион</label>
                <select id="filter-region" class="form-control">
                    <option value="" selected=""></option>
                    @foreach (var item in ViewBag.Regions)
                    {
                        <option value="@item.Code">@item.Name</option>
                    }
                </select>
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-group">
                <label class="col-form-labe">Мойка</label>
                <select id="filter-wash" class="form-control">
                    <option value="" selected=""></option>
                    @foreach (var item in ViewBag.Washes)
                    {
                        <option value="@item.Code">@item.Name</option>
                    }
                </select>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label class="col-form-labe">Период инкассации</label>
                <div id="filter-date" class="form-control">
                    <i class="fa fa-calendar"></i>
                    <span></span> <b class="caret"></b>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 table-cards">
            <div class="ibox" id="ibox-load">
                <div class="ibox-content" id="output">
                    @Html.Action("_CollectByWashesList", "CollectWash", new
               {
                   region = "",
                   wash = "",
                   begdate = ViewBag.BegDate,
                   enddate = ViewBag.EndDate
               })
                </div>
            </div>
        </div>
    </div>
</div>

<input hidden id="bdate" />
<input hidden id="edate" />

@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/dateRange")

<script type="text/javascript">

        function initDataTable() {
            $('#table-increases').DataTable({
                "responsive": true,
                "paging": false,
                "info": false,
                "searching": false,
                columnDefs: [{ targets: [2, 3, 4, 5, 6, 7, 8, 9], className: 'dt-body-right' }],
                columns: [null, null, { render: $.fn.dataTable.render.number(' ', '', 0) }, { render: $.fn.dataTable.render.number(' ', '.', 1) }, { render: $.fn.dataTable.render.number(' ', '', 0) }, { render: $.fn.dataTable.render.number(' ', '', 0) }, { render: $.fn.dataTable.render.number(' ', '', 0) }, { render: $.fn.dataTable.render.number(' ', '', 0) }, { render: $.fn.dataTable.render.number(' ', '.', 1) }, { render: $.fn.dataTable.render.number(' ', '.', 1) }],
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [],
                //buttons: [
                //    { extend: 'excel', title: 'Report' },
                //    { extend: 'pdf', title: 'Report' },

                //    {
                //        extend: 'print',
                //        customize: function (win) {
                //            $(win.document.body).addClass('white-bg');
                //            $(win.document.body).css('font-size', '10px');

                //            $(win.document.body).find('table')
                //                .addClass('compact')
                //                .css('font-size', 'inherit');
                //        }
                //    }
                //],
                "language": {
                    "zeroRecords": "Данные по заданному фильтру не найдены",
                    "emptyTable": "Данные по заданному фильтру не найдены"
                },
                "footerCallback": function () {
                    var api = this.api();

                    var intVal = function (i) {
                        return typeof i === 'string' ?
                            i.replace(/[\$,]/g, '') * 1 :
                            typeof i === 'number' ?
                                i : 0;
                    };

                    var numFormat = $.fn.dataTable.render.number(' ', '.', 1).display;
                    var numFormatCoins = $.fn.dataTable.render.number(' ', '', 0).display;

                    for (var i = 2; i < 10; ++i) {
                        total = api.column(i).data().reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);
                        if (i == 3 || i == 8 || i == 9) {
                            $(api.column(i).footer()).html(numFormat(total));
                        }
                        else {
                            $(api.column(i).footer()).html(numFormatCoins(total));
                        }
                    }
                }
            });
        }

        var regions = [];
        var washes = [];

        @foreach (var item in ViewBag.Regions) {
            <text>
                regions.push({ value:"@item.Code", text:"@item.Name", washes:[
                    @foreach(var w in item.Washes)
                    {
                        <text>
                    {
                        value: "@w.Code", text: "@w.Name", posts: [
                            @foreach(var p in w.Posts)
                            {
                                <text>
                            {
                                value: "@p.Code", text: "@p.Code"
                            },
                                </text>
                            }
                        ]
                    },
                        </text>
                    }
                    ]});
            </text>
        }

        @foreach (var item in ViewBag.Washes) {
            <text>
                washes.push({ value:"@item.Code", text:"@item.Name", posts:[
                    @foreach(var w in item.Posts)
                    {
                        <text>
                    {
                        value: "@w.Code", text: "@w.Code"
                    },
                        </text>
                    }
                    ]});
            </text>
        }

        function eventChangeRegion () {

            var curreg = $('#filter-region').find(":selected").val();
            var curwashval = $('#filter-wash').find(":selected").val();

            if (curreg == "") {
                var $selwash = $('#filter-wash');

                $selwash.empty();
                $selwash.append($("<option></option>", { value: "", text: "" }));
                washes.forEach(element => $selwash.append($("<option></option>", { value: element.value, text: element.text })));

                $selwash.val(curwashval);

                eventChangeWash();
            }
            else {
                var newwashes = [];
                newwashes = regions.find(reg => reg.value == curreg).washes;

                var $selwash = $('#filter-wash');

                $selwash.empty();
                $selwash.append($("<option></option>", { value: "", text: "" }));
                newwashes.forEach(element => $selwash.append($("<option></option>", { value: element.value, text: element.text })));

                $selwash.val(curwashval);
            }
        }

        function selectWash(IDWash) {

            var bdate = $('#bdate').val();
            var edate = $('#edate').val();
            var wash = IDWash;

            window.location.href = "CollectByDaysView?begdate=" + bdate + "&enddate=" + edate + "&wash=" + wash;
        }

        function filter() {

            var bdate = $('#bdate').val();
            var edate = $('#edate').val();
            var region = $('#filter-region').find(":selected").val();
            var wash = $('#filter-wash').find(":selected").val();

            $.ajax({
                type: "POST",
                cache: true,
                data: {
                    region: region,
                    wash: wash,
                    begdate: bdate,
                    enddate: edate
                },
                beforeSend: function () {
                    $('#ibox-load').children('.ibox-content').toggleClass('sk-loading');
                },
                complete: function () {
                    $('#ibox-load').children('.ibox-content').toggleClass('sk-loading');
                },
                success: function () {
                },
                error: function () {
                    alert('Возникла ошибка!\nПроверьте, все ли данные Вы ввели!');
                },
                url: "@Url.Action("CollectByWashesFilter", "CollectWash")"
            }).done(function (result) {
                $('#output').html(result);

                initDataTable();
            });
        }

        $(document).ready(function () {

            $('#filter-region').change(eventChangeRegion);

            $("#filter-i").on("input", filter);
            initDataTable();
        });

        $('input[name="daterange"]').daterangepicker();

        $('#bdate').val('@ViewBag.BegDate');
        $('#edate').val('@ViewBag.EndDate');

        $('#filter-date span').html('с ' + $('#bdate').val() + ' по ' + $('#edate').val());

        $('#filter-date').daterangepicker({
            "timePicker": true,
            "timePicker24Hour": true,
            "timePickerSeconds": true,
            "ranges": {
                'сегодня': [moment().startOf('day'), moment()],
                'вчера': [moment().subtract(1, 'days').startOf('day'), moment().subtract(1, 'days').endOf('day')],
                'текущий месяц': [moment().startOf('month'), moment()],
                'прошлый месяц': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],
                'с начала работы': [moment('1.1.2019'), moment()]
            },
            "locale": {
                "format": "DD.MM.YYYY",
                "separator": " ",
                "applyLabel": "Выбрать",
                "cancelLabel": "Отмена",
                "fromLabel": "From",
                "toLabel": "To",
                "customRangeLabel": "Custom",
                "weekLabel": "W",
                "daysOfWeek": [
                    "Вс",
                    "Пн",
                    "Вт",
                    "Ср",
                    "Чт",
                    "Пт",
                    "Сб"
                ],
                "monthNames": [
                    "Январь",
                    "Февраль",
                    "Март",
                    "Апрель",
                    "Май",
                    "Июнь",
                    "Июль",
                    "Август",
                    "Сентябрь",
                    "Октябрь",
                    "Ноябрь",
                    "Декабрь"
                ],
                "firstDay": 1
            },
            "showCustomRangeLabel": false,
            "alwaysShowCalendars": true,
            "startDate": moment($('#bdate').val(), 'DD.MM.YYYY HH:mm:ss'),
            "endDate": moment($('#edate').val(), 'DD.MM.YYYY HH:mm:ss'),
            "opens": "right",
            "drops": "down"
        }, function (start, end, label) {
                console.log('New date range selected: ' + start.format('YYYY-MM-DD') + ' to ' + end.format('YYYY-MM-DD') + ' (predefined range: ' + label + ')');

                if (moment('1.1.2019').isSame(start)) {
                    $('#filter-date span').html('С начала работы');
                }
                else {
                    $('#filter-date span').html(start.format('с DD.MM.YYYY HH:mm:ss') + ' ' + end.format('по DD.MM.YYYY HH:mm:ss'));
                }

                $('#bdate').val(start.format('DD.MM.YYYY HH:mm:ss'));
                $('#edate').val(end.format('DD.MM.YYYY HH:mm:ss'));
                filter();
        });
</script>
}


