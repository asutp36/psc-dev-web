@{
    ViewBag.Title = "Финансовые операции";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Финансовые операции</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Dashboard_2", "Dashboards")">Сводка</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>Финансовые операции</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>
<div class="ibox-content m-b-sm border-bottom">
    <div class="row">
        <div class="col-sm-4">
            <div class="ibox">
                <div class="ibox-title">
                    <h5>Время операции</h5>
                </div>
                <div class="ibox-content">
                    <div id="time-operation-filter" name="time-operation-filter" class="form-control">
                        <i class="fa fa-calendar"></i>
                        <span></span> <b class="caret"></b>
                    </div>
                </div>
            </div>
            <div class="form-group">
                @*<label class="col-form-labe" for="btn_for_filter" style="filter: blur(100px)">Показать</label>*@
                <button type="button" id="btn-for-filter" class="btn btn-block btn-outline btn-success font-bold">Показать</button>
            </div>
        </div>
        <div class="col-sm-3 finance-operations-summary">
            <div class="ibox ">
                <div class="ibox-title">
                    <span class="label label-warning-light float-right">макет</span>
                    <h5>Поступления</h5>
                </div>
                <div class="ibox-content">
                    @Html.Action("UpdateFinanceOperationsSummary", "Finance", new
                    {
                       begTime = ViewBag.timeOperationBeg,
                       endTime = ViewBag.timeOperationEnd
                    })
                </div>
                @*<div class="ibox-content-more">
                        <small>@DateTime.Now.ToString("dd MMMM yyyy")</small>
                    </div>*@
            </div>
        </div>
        <div class="col-sm-5 finance-operations-chart">
            <div class="ibox ">
                <div class="ibox-title">
                    <span class="label label-success float-right">по номиналу</span>
                    <h5>Количество купюр</h5>
                </div>
                <div class="ibox-content">
                    <canvas id="popChart" height="180" weight="250"></canvas>
                </div>
                @*<div class="ibox-content">
                        @Html.Action("UpdateFinanceOperationsByNominals", "Finance", new {
                           begTime = ViewBag.timeOperationBeg,
                           endTime = ViewBag.timeOperationEnd})
                    </div>*@
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 table-finance-operations">
            <div class="ibox">
                <div class="ibox-content-more">
                    @Html.Action("UpdateViewBagFinanceOperations", "Finance", new
                    {
                       begTime = ViewBag.timeOperationBeg,
                       endTime = ViewBag.timeOperationEnd
                    })
                </div>
            </div>
        </div>
    </div>
    <input hidden id="filter-timeoperationbeg" value="@ViewBag.timeOperationBeg" />
    <input hidden id="filter-timeoperationend" value="@ViewBag.timeOperationEnd" />
</div>


@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/dateRange")
    @Scripts.Render("~/plugins/select2")
    @Scripts.Render("~/plugins/chartjs")

    <script type="text/javascript">

        function initDataTable() {
            var t = $('.table_incashwashes').DataTable({
                "responsive": false,
                "searching": false,
                "pageLength": 100,
                "lengthChange": false,
                "pagingType": "full_numbers",
                "bSortClasses": false,
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [],
                //buttons: [
                //    { extend: 'excel', title: 'Report' },
                //    { extend: 'pdf', title: 'Report' },

                //    {
                //        extend: 'print',
                //        customize: function (win) {
                //            $(win.document.body).addClass('white-bg');
                //            $(win.document.body).css('font-size', '10px');

                //            $(win.document.body).find('table')
                //                .addClass('compact')
                //                .css('font-size', 'inherit');
                //        }
                //    }
                //],
                "language": {
                    "infoEmpty": "Нет записей",
                    "info": "Показано с _START_ по _END_ из _TOTAL_ записей",
                    "paginate": {
                        "first": "Первая",
                        "previous": "Предыдущая",
                        "next": "Следующая",
                        "last": "Последняя"
                    },
                    "zeroRecords": "Данные по заданному фильтру не найдены",
                    "emptyTable": "Данные по заданному фильтру не найдены"
                }
            });

            //t.on('order.dt search.dt', function () {
            //    t.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
            //        cell.innerHTML = i + 1;
            //    });
            //}).draw();
        }

        $(document).ready(function () {

            var startDate = moment().startOf('day').format('DD.MM.YYYY HH:mm:ss');
            var stopDate = moment().format('DD.MM.YYYY HH:mm:ss');

            $.ajax({
                type: "GET",
                cache: false,
                data: {
                    begTime: startDate,
                    endTime: stopDate,
                },
                error: function () {
                    alert('Error occured');
                },
                url: "@Url.Action("UpdateFinanceOperationsSummary", "Finance")",
            }).done(function (result) {
                $('.finance-operations-summary').find('.ibox-content').html(result);
            });

            var chartdata;

            $.ajax({
                    type: "GET",
                    cache: false,
                    data: {
                        begTime: startDate,
                        endTime: stopDate,
                    },
                    error: function () {
                        alert('Error occured');
                    },
                    url: "@Url.Action("UpdateFinanceOperationsByNominals", "Finance")",
                }).done(function (result) {
                    chartdata = eval(result);
                    barChart.data.datasets[0].data = chartdata;
                    barChart.update();
                });


            var popCanvas = document.getElementById("popChart");
            var barChart = new Chart(popCanvas, {
                type: 'doughnut',
                data: {
                    labels: ["10", "50", "100", "200", "500", "1 000", "2 000"],
                    datasets: [{
                        data: chartdata,
                        backgroundColor: ["#e8ce7c", "#d9e6e6", "#d9d5b0", "#80cb78", "#b8878b", "#6eaeba", "#8adffc"]
                    }]
                },
                options: {
                    cutoutPercentage: 60,
                    responsive: true,
                    maintainAspectRatio: false,
                    animation: {
                        animateScale: true
                    },
                    legend: {
                        position: 'left'
                    },
                    rotation: Math.PI * 1,
                    circumference: Math.PI * 1,
                }
            });

            $.ajax({
                    type: "GET",
                    cache: false,
                    data: {
                        begTime: startDate,
                        endTime: stopDate,
                    },
                    success: function () {
                        $('.alert-success').fadeIn('slow');
                        $('.alert-success').delay(3000).fadeOut('slow');
                    },
                    error: function () {
                        alert('Error occured');
                    },
                    url: "@Url.Action("UpdateViewBagFinanceOperations", "Finance")",
                }).done(function (result) {
                    $('.table-finance-operations').find('.ibox-content-more').html(result);

                    initDataTable();
                });

            $(document).on("click", "#btn-for-filter", function () {
                var startDate = $('#filter-timeoperationbeg').val();
                var stopDate = $('#filter-timeoperationend').val();

                $.ajax({
                    type: "GET",
                    cache: false,
                    data: {
                        begTime: startDate,
                        endTime: stopDate,
                    },
                    success: function () {
                        $('.alert-success').fadeIn('slow');
                        $('.alert-success').delay(3000).fadeOut('slow');
                    },
                    error: function () {
                        alert('Error occured');
                    },
                    url: "@Url.Action("UpdateViewBagFinanceOperations", "Finance")",
                }).done(function (result) {
                    $('.table-finance-operations').find('.ibox-content-more').html(result);

                    initDataTable();
                });

                $.ajax({
                    type: "GET",
                    cache: false,
                    data: {
                        begTime: startDate,
                        endTime: stopDate,
                    },
                    error: function () {
                        alert('Error occured');
                    },
                    url: "@Url.Action("UpdateFinanceOperationsSummary", "Finance")",
                }).done(function (result) {
                    $('.finance-operations-summary').find('.ibox-content').html(result);
                });

                $.ajax({
                    type: "GET",
                    cache: false,
                    data: {
                        begTime: startDate,
                        endTime: stopDate,
                    },
                    error: function () {
                        alert('Error occured');
                    },
                    url: "@Url.Action("UpdateFinanceOperationsByNominals", "Finance")",
                }).done(function (result) {
                    //вывод количества каждой купюры под пончиком
                    //$('.finance-operations-chart').find('.ibox-content').html(result);

                    var chartdata = eval(result);
                    barChart.data.datasets[0].data = chartdata;
                    barChart.update();
                });
            });
        });

        $('input[name="daterange"]').daterangepicker();

        $('#time-operation-filter span').html(moment().startOf('day').format('с DD.MM.YYYY HH:mm:ss') + ' ' + moment().format('по DD.MM.YYYY HH:mm:ss'));

        $('#time-operation-filter').daterangepicker({
            "timePicker": true,
            "timePicker24Hour": true,
            "timePickerSeconds": true,
            "ranges": {
                'вчера': [moment().subtract(1, 'days').startOf('day'), moment().subtract(1, 'days').endOf('day')],
                'сегодня': [moment().startOf('day'), moment()],
                'текущий месяц': [moment().startOf('month'), moment()],
                'прошлый месяц': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            },
            "locale": {
                "format": "DD.MM.YYYY",
                "separator": " ",
                "applyLabel": "Выбрать",
                "cancelLabel": "Отмена",
                "fromLabel": "From",
                "toLabel": "To",
                "customRangeLabel": "Custom",
                "weekLabel": "W",
                "daysOfWeek": [
                    "Вс",
                    "Пн",
                    "Вт",
                    "Ср",
                    "Чт",
                    "Пт",
                    "Сб"
                ],
                "monthNames": [
                    "Январь",
                    "Февраль",
                    "Март",
                    "Апрель",
                    "Май",
                    "Июнь",
                    "Июль",
                    "Август",
                    "Сентябрь",
                    "Октябрь",
                    "Ноябрь",
                    "Декабрь"
                ],
                "firstDay": 1
            },
            "showCustomRangeLabel": false,
            "alwaysShowCalendars": true,
            "startDate": moment().startOf('day'),
            "endDate": moment().endOf('day'),
            "opens": "right",
            "drops": "down"
        }, function (start, end, label) {
            console.log('New date range selected: ' + start.format('YYYY-MM-DD') + ' to ' + end.format('YYYY-MM-DD') + ' (predefined range: ' + label + ')');
            $('#time-operation-filter span').html(start.format('с DD.MM.YYYY HH:mm:ss') + ' ' + end.format('по DD.MM.YYYY HH:mm:ss'));

            $('#filter-timeoperationbeg').val(start.format('DD.MM.YYYY HH:mm:ss'));
            $('#filter-timeoperationend').val(end.format('DD.MM.YYYY HH:mm:ss'));
        });
    </script>
}
