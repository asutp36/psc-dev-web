//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inspinia_MVC5.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ModelDb : DbContext
    {
        public ModelDb()
            : base("name=ModelDb")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Card> Cards { get; set; }
        public virtual DbSet<CardStatus> CardStatuses { get; set; }
        public virtual DbSet<CardType> CardTypes { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<CountersOperating> CountersOperatings { get; set; }
        public virtual DbSet<CountersTotal> CountersTotals { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<EventCash> EventCashes { get; set; }
        public virtual DbSet<EventKind> EventKinds { get; set; }
        public virtual DbSet<EventMode> EventModes { get; set; }
        public virtual DbSet<EventSimple> EventSimples { get; set; }
        public virtual DbSet<Mode> Modes { get; set; }
        public virtual DbSet<Operation> Operations { get; set; }
        public virtual DbSet<OperationType> OperationTypes { get; set; }
        public virtual DbSet<Owner> Owners { get; set; }
        public virtual DbSet<Post> Posts { get; set; }
        public virtual DbSet<Psce> Psces { get; set; }
        public virtual DbSet<Region> Regions { get; set; }
        public virtual DbSet<Wash> Washes { get; set; }
    
        public virtual ObjectResult<GetCardsOperations_Result> GetCardsOperations(string p_Phone, string p_Cardnum, string p_CardTypeCode, string p_CardStatusName, string p_OperationTypeName, Nullable<System.DateTime> p_OperationDateBeg, Nullable<System.DateTime> p_OperationDateEnd, Nullable<int> p_LocalizedBy, Nullable<int> p_LocalizedID)
        {
            var p_PhoneParameter = p_Phone != null ?
                new ObjectParameter("p_Phone", p_Phone) :
                new ObjectParameter("p_Phone", typeof(string));
    
            var p_CardnumParameter = p_Cardnum != null ?
                new ObjectParameter("p_Cardnum", p_Cardnum) :
                new ObjectParameter("p_Cardnum", typeof(string));
    
            var p_CardTypeCodeParameter = p_CardTypeCode != null ?
                new ObjectParameter("p_CardTypeCode", p_CardTypeCode) :
                new ObjectParameter("p_CardTypeCode", typeof(string));
    
            var p_CardStatusNameParameter = p_CardStatusName != null ?
                new ObjectParameter("p_CardStatusName", p_CardStatusName) :
                new ObjectParameter("p_CardStatusName", typeof(string));
    
            var p_OperationTypeNameParameter = p_OperationTypeName != null ?
                new ObjectParameter("p_OperationTypeName", p_OperationTypeName) :
                new ObjectParameter("p_OperationTypeName", typeof(string));
    
            var p_OperationDateBegParameter = p_OperationDateBeg.HasValue ?
                new ObjectParameter("p_OperationDateBeg", p_OperationDateBeg) :
                new ObjectParameter("p_OperationDateBeg", typeof(System.DateTime));
    
            var p_OperationDateEndParameter = p_OperationDateEnd.HasValue ?
                new ObjectParameter("p_OperationDateEnd", p_OperationDateEnd) :
                new ObjectParameter("p_OperationDateEnd", typeof(System.DateTime));
    
            var p_LocalizedByParameter = p_LocalizedBy.HasValue ?
                new ObjectParameter("p_LocalizedBy", p_LocalizedBy) :
                new ObjectParameter("p_LocalizedBy", typeof(int));
    
            var p_LocalizedIDParameter = p_LocalizedID.HasValue ?
                new ObjectParameter("p_LocalizedID", p_LocalizedID) :
                new ObjectParameter("p_LocalizedID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCardsOperations_Result>("GetCardsOperations", p_PhoneParameter, p_CardnumParameter, p_CardTypeCodeParameter, p_CardStatusNameParameter, p_OperationTypeNameParameter, p_OperationDateBegParameter, p_OperationDateEndParameter, p_LocalizedByParameter, p_LocalizedIDParameter);
        }
    }
}
