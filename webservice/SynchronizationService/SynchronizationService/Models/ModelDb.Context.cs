//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SynchronizationService.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ModelDb : DbContext
    {
        public ModelDb()
            : base("name=ModelDb")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cards> Cards { get; set; }
        public virtual DbSet<CardStatuses> CardStatuses { get; set; }
        public virtual DbSet<CardTypes> CardTypes { get; set; }
        public virtual DbSet<Device> Device { get; set; }
        public virtual DbSet<Finance> Finance { get; set; }
        public virtual DbSet<FinanceType> FinanceType { get; set; }
        public virtual DbSet<Operations> Operations { get; set; }
        public virtual DbSet<OperationTypes> OperationTypes { get; set; }
        public virtual DbSet<Owners> Owners { get; set; }
        public virtual DbSet<Posts> Posts { get; set; }
        public virtual DbSet<Psces> Psces { get; set; }
        public virtual DbSet<Wash> Wash { get; set; }
        public virtual DbSet<Prices> Prices { get; set; }
    
        public virtual ObjectResult<Nullable<int>> GetCardBalance(string card)
        {
            var cardParameter = card != null ?
                new ObjectParameter("Card", card) :
                new ObjectParameter("Card", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetCardBalance", cardParameter);
        }
    
        public virtual ObjectResult<GetCardList_Result> GetCardList(string p_Phone, string p_Cardnum, string p_CardTypeCode, string p_CardStatusName, Nullable<int> p_BalanceMin, Nullable<int> p_BalanceMax, Nullable<System.DateTime> p_ActivationDateBeg, Nullable<System.DateTime> p_ActivationDateEnd, Nullable<int> p_ActivationBy, Nullable<System.DateTime> p_LastOperationDateBeg, Nullable<System.DateTime> p_LastOperationDateEnd, Nullable<int> p_LastOperationBy, Nullable<int> p_IncreaseSumMin, Nullable<int> p_IncreaseSumMax, Nullable<int> p_DecreaseSumMin, Nullable<int> p_DEcreaseSumMax, Nullable<int> p_CountOperationMin, Nullable<int> p_CountOperationMax)
        {
            var p_PhoneParameter = p_Phone != null ?
                new ObjectParameter("p_Phone", p_Phone) :
                new ObjectParameter("p_Phone", typeof(string));
    
            var p_CardnumParameter = p_Cardnum != null ?
                new ObjectParameter("p_Cardnum", p_Cardnum) :
                new ObjectParameter("p_Cardnum", typeof(string));
    
            var p_CardTypeCodeParameter = p_CardTypeCode != null ?
                new ObjectParameter("p_CardTypeCode", p_CardTypeCode) :
                new ObjectParameter("p_CardTypeCode", typeof(string));
    
            var p_CardStatusNameParameter = p_CardStatusName != null ?
                new ObjectParameter("p_CardStatusName", p_CardStatusName) :
                new ObjectParameter("p_CardStatusName", typeof(string));
    
            var p_BalanceMinParameter = p_BalanceMin.HasValue ?
                new ObjectParameter("p_BalanceMin", p_BalanceMin) :
                new ObjectParameter("p_BalanceMin", typeof(int));
    
            var p_BalanceMaxParameter = p_BalanceMax.HasValue ?
                new ObjectParameter("p_BalanceMax", p_BalanceMax) :
                new ObjectParameter("p_BalanceMax", typeof(int));
    
            var p_ActivationDateBegParameter = p_ActivationDateBeg.HasValue ?
                new ObjectParameter("p_ActivationDateBeg", p_ActivationDateBeg) :
                new ObjectParameter("p_ActivationDateBeg", typeof(System.DateTime));
    
            var p_ActivationDateEndParameter = p_ActivationDateEnd.HasValue ?
                new ObjectParameter("p_ActivationDateEnd", p_ActivationDateEnd) :
                new ObjectParameter("p_ActivationDateEnd", typeof(System.DateTime));
    
            var p_ActivationByParameter = p_ActivationBy.HasValue ?
                new ObjectParameter("p_ActivationBy", p_ActivationBy) :
                new ObjectParameter("p_ActivationBy", typeof(int));
    
            var p_LastOperationDateBegParameter = p_LastOperationDateBeg.HasValue ?
                new ObjectParameter("p_LastOperationDateBeg", p_LastOperationDateBeg) :
                new ObjectParameter("p_LastOperationDateBeg", typeof(System.DateTime));
    
            var p_LastOperationDateEndParameter = p_LastOperationDateEnd.HasValue ?
                new ObjectParameter("p_LastOperationDateEnd", p_LastOperationDateEnd) :
                new ObjectParameter("p_LastOperationDateEnd", typeof(System.DateTime));
    
            var p_LastOperationByParameter = p_LastOperationBy.HasValue ?
                new ObjectParameter("p_LastOperationBy", p_LastOperationBy) :
                new ObjectParameter("p_LastOperationBy", typeof(int));
    
            var p_IncreaseSumMinParameter = p_IncreaseSumMin.HasValue ?
                new ObjectParameter("p_IncreaseSumMin", p_IncreaseSumMin) :
                new ObjectParameter("p_IncreaseSumMin", typeof(int));
    
            var p_IncreaseSumMaxParameter = p_IncreaseSumMax.HasValue ?
                new ObjectParameter("p_IncreaseSumMax", p_IncreaseSumMax) :
                new ObjectParameter("p_IncreaseSumMax", typeof(int));
    
            var p_DecreaseSumMinParameter = p_DecreaseSumMin.HasValue ?
                new ObjectParameter("p_DecreaseSumMin", p_DecreaseSumMin) :
                new ObjectParameter("p_DecreaseSumMin", typeof(int));
    
            var p_DEcreaseSumMaxParameter = p_DEcreaseSumMax.HasValue ?
                new ObjectParameter("p_DEcreaseSumMax", p_DEcreaseSumMax) :
                new ObjectParameter("p_DEcreaseSumMax", typeof(int));
    
            var p_CountOperationMinParameter = p_CountOperationMin.HasValue ?
                new ObjectParameter("p_CountOperationMin", p_CountOperationMin) :
                new ObjectParameter("p_CountOperationMin", typeof(int));
    
            var p_CountOperationMaxParameter = p_CountOperationMax.HasValue ?
                new ObjectParameter("p_CountOperationMax", p_CountOperationMax) :
                new ObjectParameter("p_CountOperationMax", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCardList_Result>("GetCardList", p_PhoneParameter, p_CardnumParameter, p_CardTypeCodeParameter, p_CardStatusNameParameter, p_BalanceMinParameter, p_BalanceMaxParameter, p_ActivationDateBegParameter, p_ActivationDateEndParameter, p_ActivationByParameter, p_LastOperationDateBegParameter, p_LastOperationDateEndParameter, p_LastOperationByParameter, p_IncreaseSumMinParameter, p_IncreaseSumMaxParameter, p_DecreaseSumMinParameter, p_DEcreaseSumMaxParameter, p_CountOperationMinParameter, p_CountOperationMaxParameter);
        }
    }
}
